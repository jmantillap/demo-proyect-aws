AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template for creating a task definition"
Resources:
# Rol de la tarea             
  ECSTaskRol:
    DeletionPolicy: Delete
    Type: "AWS::IAM::Role"    
    Properties: 
      RoleName: "fondo-ecs-task-rol"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "ecs-tasks.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
  # Rol de ejecucion del fargate    
  ECSExecutionRole:
    DeletionPolicy: Delete
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'RolECS'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  MyTaskDefinition:
    DeletionPolicy: Delete
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - "FARGATE"
      TaskRoleArn: !Ref ECSTaskRol  
      ExecutionRoleArn: !Ref ECSExecutionRole
      Cpu: 256
      Memory: 512
      NetworkMode: "awsvpc"
      ContainerDefinitions:
        - Name: "fondo-backend"
          Image: "0000000000.dkr.ecr.us-east-1.amazonaws.com/jmantillap/fondo:1.0"
          MemoryReservation: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 8080
              HostPort: 8080
              Protocol: tcp 
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: 'true'
              awslogs-group: "/ecs/fondo-task"
              awslogs-region: "us-east-1"
              awslogs-stream-prefix: ecs         
        
  # Creacion politica  para la el rol ejecucion del fargate
  RoleExecutionFargate: 
    DeletionPolicy: Delete
    Type: "AWS::IAM::Policy"
    Properties:         
      PolicyName: "ECSFargatePolicy"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'ssm:GetParameters'
              - 'ssm:DescribeParameters'
              - 'ssm:GetParameter'
              - 'ssm:GetParametersByPath'
              - 'ssm:PutParameter'
              - 'ssm:GetParameterHistory'
              - 'ssm:DescribeParameter'
              - 'logs:*'
              - 'cloudwatch:GenerateQuery'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: '*'
      Roles: 
        - Ref: "ECSExecutionRole"      
  # Creacion politica para la el rol de la tarea    
  FargateTaskPolicy:
    DeletionPolicy: Delete
    Type: AWS::IAM::Policy    
    Properties:
        PolicyName: 'ECSTaskPolicy'
        PolicyDocument: 
            Version: '2012-10-17'
            Statement:
                - Effect: Allow
                  Action:                       
                      - 'dynamodb:UpdateItem'
                      - 'dynamodb:PutItem'
                      - 'dynamodb:List*'                      
                      - 'dynamodb:GetItem'                      
                      - 'dynamodb:Query'
                      - 'dynamodb:Scan'
                      - 'dynamodb:Batch*'
                      - 'dynamodb:Describe*'
                      - 'dynamodb:Scan*'
                      - 'logs:*'
                      - 'cloudwatch:GenerateQuery'
                      - 'logs:CreateLogStream'
                      - 'logs:PutLogEvents'
                      - 'logs:PutLogEvents'
                      - 'ses:SendEmail'
                      - 'ses:SendRawEmail'                      
                      - 'ses:*'
                  Resource: '*'
        Roles: 
            - Ref: "ECSTaskRol"  
  # Creacion del security group para el fargate
  FargateAlbSG:
    DeletionPolicy: Delete  
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: SG for the Fargate ALB
      GroupName: FargateAlbSG
      SecurityGroupIngress:
        - CidrIpv6: ::/0
          FromPort: 80
          ToPort: 80
          IpProtocol: TCP
          Description: 'Inbound rule for IPv6 traffic'
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: TCP
          Description: 'Inbound rule for IPv4 traffic'      
  # Creacion balanceador de carga para el fargate      
  FargateAlb:
    DeletionPolicy: Delete
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: FargateAlb
      Subnets:
        - subnet-0343d432494f88d5e
        - subnet-08b4d9aa344b8a29a        
      Type: application
      SecurityGroups:
        - !GetAtt FargateAlbSG.GroupId
  # Creacion del targetgroup     
  MyFargateTargetGroup:
    DeletionPolicy: Delete
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: MyFargateTargetGroup
      VpcId: vpc-087db88c57892cc84
      Protocol: HTTP
      Port: 8080
      HealthCheckPath: /api/status/health
      TargetType: ip
      HealthCheckIntervalSeconds: 30
   # Creacion del listener del fargategroup     
  Listener:
    DeletionPolicy: Delete
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref MyFargateTargetGroup
          Type: forward
      LoadBalancerArn: !Ref FargateAlb
      Port: 80
      Protocol: HTTP      
  # Creacion del security group para LOS CONTENEDORES
  Alb2FargateContainers:
    DeletionPolicy: Delete
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: SG for traffic between ALB and containers
      GroupName: Alb2FargateContainers
      SecurityGroupIngress:
        - IpProtocol: -1
          SourceSecurityGroupId: !GetAtt FargateAlbSG.GroupId
          Description: 'Inbound rule for all traffic'  
  # Creacion cluster
  ECSCluster:
      DeletionPolicy: Delete
      Type: 'AWS::ECS::Cluster'
      Properties:
        ClusterName: MyFargateCluster        
  # Creacion del servicio
  MyECSService:
    DeletionPolicy: Delete
    Type: AWS::ECS::Service
    DependsOn:
      - Listener
    Properties:
      LaunchType: FARGATE
      Cluster:
        Ref: "ECSCluster"
      DesiredCount: 2
      TaskDefinition:
        Ref: "MyTaskDefinition"        
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !GetAtt Alb2FargateContainers.GroupId
          Subnets: ['subnet-0343d432494f88d5e','subnet-08b4d9aa344b8a29a']
      LoadBalancers:
        - TargetGroupArn:
            Ref: MyFargateTargetGroup
          ContainerPort: 8080
          ContainerName: fondo-backend
